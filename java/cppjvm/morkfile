$(this)_type = static
$(this)_requires = jniutil cppwrap

# The list of Java classes we want to access from C++. The ones outside java.lang are for the cppjvm unit tests.
$(this)_input_classes =                 \
	java.lang.System                    \
	java.lang.Character					\
	java.lang.Short						\
	java.lang.Integer					\
	java.lang.Long						\
	java.lang.Float						\
	java.lang.Double					\
	java.math.BigInteger \
	java.io.ByteArrayOutputStream       \
	java.net.Inet4Address \
	java.net.InetSocketAddress \
	java.util.regex.Pattern             \
	com.google.bitcoin.kits.WalletAppKit \
	com.google.bitcoin.params.MainNetParams \
	com.google.bitcoin.params.TestNet3Params \
	com.google.bitcoin.params.RegTestParams \
	com.google.bitcoin.params.UnitTestParams \
	com.google.bitcoin.protocols.channels.PaymentChannelServerListener \
	com.google.bitcoin.core.Utils \
	com.google.bitcoin.core.NetworkParameters \
	com.google.bitcoin.core.PeerAddress \
	com.google.bitcoin.utils.BriefLogFormatter \
	com.google.bitcoin.jni.NativeWalletEventListener \
	com.google.bitcoin.jni.NativePaymentChannelServerConnectionEventHandler \
	com.google.bitcoin.jni.NativePaymentChannelHandlerFactory \
	com.google.bitcoin.protocols.channels.PaymentChannelCloseException \
	com.google.bitcoin.protocols.channels.PaymentChannelServer \
	com.google.bitcoin.networkabstraction.ProtobufParser \
	com.google.bitcoin.networkabstraction.StreamParserFactory \
	com.google.bitcoin.networkabstraction.NioServer \

# Use the cppwrap tool
$(this)_cppwrap = bash java/cppwrap/cppwrap.sh java/cppjvm/gen $($(this)_input_classes)

# Build a list of outputs that would be generated
$(this)_codegen_outputs := $(shell $($(this)_cppwrap) --list)

# Actually generate them
$(this)_codegen_command := $($(this)_cppwrap) --generate

